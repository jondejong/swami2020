/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package swami2020

import org.http4k.client.ApacheClient
import org.http4k.core.Method
import org.http4k.core.Request
import org.http4k.core.Response
import org.http4k.core.Status.Companion.INTERNAL_SERVER_ERROR
import org.http4k.core.Status.Companion.OK
import org.http4k.routing.bind
import org.http4k.routing.path
import org.http4k.routing.routes
import org.http4k.server.Jetty
import org.http4k.server.asServer

class App {
    val greeting: String
        get() {
            return "Hello world."
        }
}

fun main(args: Array<String>) {
    println(App().greeting)

//    val app = { request: Request -> Response(OK).body("Hello, ${request.query("name")}!") }

    val app = routes(
            "/hello" bind routes(
                    "/{name:.*}" bind Method.GET to { request: Request -> Response(OK).body("Hello, ${request.path("name")}!") }
            ),
            "/fail" bind Method.POST to { request: Request -> Response(INTERNAL_SERVER_ERROR) }
    )

    val jettyServer = app.asServer(Jetty(9000)).start()

//    val request = Request(Method.GET, "http://localhost:9000").query("name", "John Doe")



//    val client = ApacheClient()
//
//    println(client(request))
//
//    jettyServer.stop()
}
