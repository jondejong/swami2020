/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package swami2020

import org.http4k.core.Body
import org.http4k.core.Method
import org.http4k.core.Request
import org.http4k.core.Response
import org.http4k.core.Status.Companion.INTERNAL_SERVER_ERROR
import org.http4k.core.Status.Companion.OK
import org.http4k.routing.bind
import org.http4k.routing.path
import org.http4k.routing.routes
import org.http4k.server.Jetty
import org.http4k.server.asServer
import org.http4k.format.Jackson.auto
import swami2020.dto.Team

fun main(args: Array<String>) {

//    val app = { request: Request -> Response(OK).body("Hello, ${request.query("name")}!") }

    val teamLens = Body.auto<Team>().toLens()

    val teamHandler = { request: Request ->
        val id = request.path("id")
        val iowa = Team(id.toString(), "Iowa", "Hawkeyes")
        teamLens(iowa, Response(OK))
    }

    val app = routes(
            "/hello" bind routes(
                    "/{name:.*}" bind Method.GET to { request: Request -> Response(OK).body("Hello, ${request.path("name")}!") }
            ),
            "team" bind routes(
                "/{id:.*}" bind Method.GET to teamHandler
            ),
            "/fail" bind Method.POST to { request: Request -> Response(INTERNAL_SERVER_ERROR) }
    )

    val jettyServer = app.asServer(Jetty(9000)).start()

}
